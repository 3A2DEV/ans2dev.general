# Copyright (c) 2025, Marco Noce <nce.marco@gmail.com>
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Install dep
  ansible.builtin.pip:
    name:
      - openpyxl

- name: Copy sample Excel file from local repository
  ansible.builtin.copy:
    src: files/sample.xlsx
    dest: /tmp/test_sample.xlsx

- name: Read the initial Excel file using open_xl (read mode)
  ans2dev.general.open_xl:
    src: "/tmp/test_sample.xlsx"
    op: "r"
    index_by_name: true
  register: read_initial

- name: Assert that the initial file has two data rows
  ansible.builtin.assert:
    that:
      - "(read_initial.result['Sheet'] | length) == 2"
    fail_msg: "Expected two data rows in the initial file."

- name: Overwrite cell value in row 2 (update operation)
  ans2dev.general.open_xl:
    src: "/tmp/test_sample.xlsx"
    dest: "/tmp/test_sample.xlsx"
    op: "w"
    sheet_name: "Sheet"
    updates_matrix:
      - cell_row: 2
        cell_col: 3
        cell_value: 150
  register: write_result

- name: Read Excel file after update
  ans2dev.general.open_xl:
    src: "/tmp/test_sample.xlsx"
    op: "r"
    index_by_name: true
  register: read_after_update

- name: Assert that cell (row 2, column 'Value') is updated to 150
  ansible.builtin.assert:
    that:
      - "read_after_update.result['Sheet'][0]['Value'] == 150"
    fail_msg: "Cell value was not updated as expected."

- name: Append a new row using open_xl (append operation)
  ans2dev.general.open_xl:
    src: "/tmp/test_sample.xlsx"
    dest: "/tmp/test_sample.xlsx"
    op: "a"
    sheet_name: "Sheet"
    updates_matrix:
      - cell_col: 1
        cell_value: 3
      - cell_col: 2
        cell_value: "Charlie"
      - cell_col: 3
        cell_value: 300
  register: append_result

- name: Read Excel file after append
  ans2dev.general.open_xl:
    src: "/tmp/test_sample.xlsx"
    op: "r"
    index_by_name: true
  register: read_after_append

- name: Assert that a new row for 'Charlie' is appended
  ansible.builtin.assert:
    that:
      - "'Charlie' in (read_after_append.result['Sheet'] | map(attribute='Name') | list)"
    fail_msg: "New row was not appended correctly."

- name: Insert a row above row 2 using open_xl (insert operation)
  ans2dev.general.open_xl:
    src: "/tmp/test_sample.xlsx"
    dest: "/tmp/test_sample.xlsx"
    op: "i"
    sheet_name: "Sheet"
    updates_matrix:
      - cell_row: 2
        cell_col: 2
        cell_value: "Inserted"
      - cell_row: 2
        cell_col: 3
        cell_value: 999
  register: insert_result

- name: Read Excel file after insert
  ans2dev.general.open_xl:
    src: "/tmp/test_sample.xlsx"
    op: "r"
    index_by_name: true
  register: read_after_insert

- name: Assert that the inserted row is present at the correct position
  ansible.builtin.assert:
    that:
      - "read_after_insert.result['Sheet'][0]['Name'] == 'Inserted'"
      - "read_after_insert.result['Sheet'][0]['Value'] == 999"
    fail_msg: "Row insertion did not occur as expected."

- name: Display final Excel content
  ansible.builtin.debug:
    var: read_after_insert.result

- name: Create a new Excel file using op "n"
  ans2dev.general.open_xl:
    dest: "/tmp/new_file.xlsx"
    op: "n"
    sheet_name: "Data"
    updates_matrix:
      - cell_row: 1
        cell_col: 1
        cell_value: "Header"
  register: create_excel_result

- name: Verify that the new Excel file was created
  stat:
    path: "/tmp/new_file.xlsx"
  register: new_file_stat

- name: Assert that the Excel file exists
  assert:
    that:
      - new_file_stat.stat.exists

- name: Read back the newly created Excel file
  ans2dev.general.open_xl:
    src: "/tmp/new_file.xlsx"
    op: "r"
    sheet_name: "Data"
    index_by_name: false
  register: read_excel_result

- name: Assert that the cell (1,1) contains "Header"
  assert:
    that:
      - read_excel_result.result.Data[0]['col_1'] == "Header"

- name: Copy colored sample Excel file from local repository
  ansible.builtin.copy:
    src: files/colored_sample.xlsx
    dest: /tmp/colored_test_sample.xlsx

- name: Overwrite cell value in row 2
  ans2dev.general.open_xl:
    src: "/tmp/colored_test_sample.xlsx"
    dest: "/tmp/colored_test_sample.xlsx"
    op: "w"
    sheet_name: "Sheet1"
    updates_matrix:
      - cell_row: 2
        cell_col: 1
        cell_value: "Charlie"
      - cell_row: 2
        cell_col: 2
        cell_value: "30"
  register: colored_result